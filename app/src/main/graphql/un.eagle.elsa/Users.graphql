query queryAllUsers {
    allUsers {
        total
        list {
            id
            name
            last_name
            username
            email
            last_login
        }
    }
}


mutation createUser (
    $name: String!,
    $last_name: String!,
    $lastnane: String!,
    $username: String!,
    $email: String!,
    $password: String!,
    $password_confirmation: String!
) {
    createUser(user:{
        name: $name,
        last_name: $last_name,
        username: $lastnane,
        email: $email,
        username: $username,
        password: $password,
        password_confirmation: $password_confirmation
    }){
        id
        name
        last_name
        username
        email
        last_login
    }
}

query userById($idUser: String!) {
    userById(id: {id: $idUser} ){
        id
        name
        last_name
        username
        email
        last_login
    }
}

query userList ($userId: String!) {
    userList(userId: $userId) {
        count
        otherUsers {
            id
            name
            lastName
            iFollow
            followsMe
        }
    }
}


mutation createNewUserSession(
    $email: String!,
    $password: String!
) {
    createNewUserSession(user: { email: $email, password: $password} ) {
        jwt
        id
    }
}

query followers($userId: String!) {
    followers(userId: $userId) {
        count
        userIds
    }
}


query following($userId: String!) {
    following(userId: $userId) {
        count
        userIds
    }
}

query homeFeedForUser($id: String!) {
    homeFeedForUser(id: $id) {
        id
        idCreator
        createdAt
        content
    }
}

query profileFeedForUser($id: String!) {
    profileFeedForUser(id: $id) {
        id
        idCreator
        createdAt
        content
    }
}

mutation createPost($userId: String!, $content: String!) {
    createPost(post: {content: $content, idCreator: $userId}) {
        id
        idCreator
    }
}

mutation deleteFollow($followerId: String!, $followingId: String!) {
    deleteFollow(followerId: $followerId, followingId: $followingId) {
        followerId
        followingId
    }
}

mutation createFollow($followerId: String!, $followingId: String!) {
    createFollow(followerId: $followerId, followingId: $followingId) {
        followerId
        followingId
    }
}
query follows ($followerId: String!, $followingId: String!) {
    follows(followerId: $followerId, followingId: $followingId) {
        follows
    }
}

mutation createShare($userId: String!, $postId: String!) {
    createShare(share: {userId: $userId, postId: $postId} ) {
        userId
        postId
        sharedAt
    }
}

query notificationsForUser($userId: String!) {
    NotificationByUser(user: $userId) {
        notificated_user
        follower
        date
        type
        post_id
        content
        follower_name
    }
}

mutation addToken($userId: String!, $token: String!) {
    addToken( token: {
        user_id: $userId,
        token: $token} )
    {
        user_id
        tokens
    }
}


query getMusicList($id: String!) {
    getMusicList(id: $id) {
        name
        url
    }
}